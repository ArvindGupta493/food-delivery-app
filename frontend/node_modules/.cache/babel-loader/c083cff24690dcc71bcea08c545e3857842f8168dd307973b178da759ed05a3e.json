{"ast":null,"code":"var _jsxFileName = \"/home/arvind/food-delivery-app/frontend/src/components/Address new/address.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./address.css\"; \n// import Header from \"../header/header\";\n// import Footer from \"../footer/Footer\";\n\n// const Address = () => {\n//   const [showPopup, setShowPopup] = useState(false); // State to toggle the popup\n//   const [addresses, setAddresses] = useState([\n//     {\n//       id: 1,\n//       name: \"Mike Ross\",\n//       address: \"45, Green Street, Sector 12, New Delhi, 110001, India\",\n//       phoneNumber: \"8734637468\",\n//       state: \"Delhi\",\n//       pin: \"110001\",\n//       city: \"New Delhi\",\n//       isDefault: true,\n//     },\n//     {\n//       id: 2,\n//       name: \"Mike Ross\",\n//       address: \"Office 704, Tower B, Techno Plaza, Bengaluru, Karnataka, 560100, India\",\n//       phoneNumber: \"8937447362\",\n//       state: \"Karnataka\",\n//       pin: \"560100\",\n//       city: \"Bengaluru\",\n//       isDefault: false,\n//     },\n//   ]); // Default addresses\n//   const [newAddress, setNewAddress] = useState({\n//     state: \"\",\n//     city: \"\",\n//     pin: \"\",\n//     phoneNumber: \"\",\n//     address: \"\",\n//   }); // State for the new address form\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewAddress({ ...newAddress, [name]: value });\n//   };\n\n//   const handleSaveAddress = () => {\n//     if (\n//       newAddress.state &&\n//       newAddress.city &&\n//       newAddress.pin &&\n//       newAddress.phoneNumber &&\n//       newAddress.address\n//     ) {\n//       const updatedAddresses = [\n//         ...addresses,\n//         { ...newAddress, id: addresses.length + 1, isDefault: false },\n//       ];\n//       setAddresses(updatedAddresses);\n//       setNewAddress({\n//         state: \"\",\n//         city: \"\",\n//         pin: \"\",\n//         phoneNumber: \"\",\n//         address: \"\",\n//       }); // Reset form\n//       setShowPopup(false); // Close popup\n//     } else {\n//       alert(\"Please fill in all fields.\");\n//     }\n//   };\n\n//   const handleRemoveAddress = (id) => {\n//     setAddresses(addresses.filter((address) => address.id !== id));\n//   };\n\n//   return (\n//     <div>\n//       <Header />\n//       <div className=\"addresses-page\">\n//         <header className=\"headers\">\n//         <img src=\"images/arrow-left.png\" alt=\"arrow-left\" />\n\n//           <h1>Your Addresses</h1>\n//         </header>\n//         <div className=\"addresses-container\">\n//           {/* Add Address Card  */}\n//           <div\n//             className=\"address-card add-address\"\n//             onClick={() => setShowPopup(true)}\n//           >\n//             <div className=\"add-icon\">\n//               <img src=\"/images/add 2.png\" alt=\"add\" />\n//             </div>\n//             <p>Add Address</p>\n//           </div>\n\n//           {/* Display Existing Addresses */}\n//           {addresses.map((address) => (\n//             <div className=\"address-card\" key={address.id}>\n//               <h3 className=\"address-name\">\n//                 {address.name}\n//                 {address.isDefault && (\n//                   <span className=\"default-badge\">Default</span>\n//                 )}\n//               </h3>\n\n//               <p>{address.address}</p>\n//               <p>Phone Number: {address.phoneNumber}</p>\n//               <div className=\"actions\"> \n//                 <button>Edit</button> |{\" \"}\n//                 <button onClick={() => handleRemoveAddress(address.id)}>\n//                   Remove\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Popup for Adding Address */}\n//         {showPopup && (\n//           <div className=\"popup-overlay\" onClick={() => setShowPopup(false)}>\n//             <div className=\"popup-content\" onClick={(e) => e.stopPropagation()}>\n\n//               <div className=\"popup-head\">\n//                 <img src=\"/images/Location.png\" alt=\"location\"/>\n//                 <h2>Add Address</h2>\n//               </div>\n\n//               <div className=\"form-row\">\n//                 <input\n//                   type=\"text\"\n//                   name=\"state\"\n//                   placeholder=\"State\"\n//                   value={newAddress.state}\n//                   onChange={handleInputChange}\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"city\"\n//                   placeholder=\"City/District\"\n//                   value={newAddress.city}\n//                   onChange={handleInputChange}\n//                 />\n\n//                 <input\n//                   type=\"text\"\n//                   name=\"pin\"\n//                   placeholder=\"Pin Code\"\n//                   value={newAddress.pin}\n//                   onChange={handleInputChange}\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"phoneNumber\"\n//                   placeholder=\"Phone Number\"\n//                   value={newAddress.phoneNumber}\n//                   onChange={handleInputChange}\n//                 />\n//               </div>\n//               <textarea\n//                 name=\"address\"\n//                 placeholder=\"Enter full address\"\n//                 value={newAddress.address}\n//                 onChange={handleInputChange}\n//               ></textarea>\n//               <div className=\"popup-actions\">\n//                 <button onClick={handleSaveAddress}>Save</button>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default Address;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport \"./address.css\";\nimport Header from \"../header/header\";\nimport Footer from \"../footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Address = () => {\n  _s();\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const [showPopup, setShowPopup] = useState(false); // State to toggle the popup\n  const [addresses, setAddresses] = useState([{\n    id: 1,\n    name: \"Mike Ross\",\n    address: \"45, Green Street, Sector 12, New Delhi, 110001, India\",\n    phoneNumber: \"8734637468\",\n    state: \"Delhi\",\n    pin: \"110001\",\n    city: \"New Delhi\",\n    isDefault: true\n  }, {\n    id: 2,\n    name: \"Mike Ross\",\n    address: \"Office 704, Tower B, Techno Plaza, Bengaluru, Karnataka, 560100, India\",\n    phoneNumber: \"8937447362\",\n    state: \"Karnataka\",\n    pin: \"560100\",\n    city: \"Bengaluru\",\n    isDefault: false\n  }]); // Default addresses\n  const [newAddress, setNewAddress] = useState({\n    state: \"\",\n    city: \"\",\n    pin: \"\",\n    phoneNumber: \"\",\n    address: \"\"\n  }); // State for the new address form\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewAddress({\n      ...newAddress,\n      [name]: value\n    });\n  };\n  const handleSaveAddress = () => {\n    if (newAddress.state && newAddress.city && newAddress.pin && newAddress.phoneNumber && newAddress.address) {\n      const updatedAddresses = [...addresses, {\n        ...newAddress,\n        id: addresses.length + 1,\n        isDefault: false\n      }];\n      setAddresses(updatedAddresses);\n      setNewAddress({\n        state: \"\",\n        city: \"\",\n        pin: \"\",\n        phoneNumber: \"\",\n        address: \"\"\n      }); // Reset form\n      setShowPopup(false); // Close popup\n    } else {\n      alert(\"Please fill in all fields.\");\n    }\n  };\n  const handleRemoveAddress = id => {\n    setAddresses(addresses.filter(address => address.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addresses-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"headers\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/arrow-left.png\",\n          alt: \"arrow-left\",\n          onClick: () => navigate(\"/checkout\") // Navigate to \"/checkout\" on click\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Addresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addresses-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"address-card add-address\",\n          onClick: () => setShowPopup(true),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/add 2.png\",\n              alt: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), addresses.map(address => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"address-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"address-name\",\n            children: [address.name, address.isDefault && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"default-badge\",\n              children: \"Default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: address.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Phone Number: \", address.phoneNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), \" |\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveAddress(address.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, address.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-overlay\",\n        onClick: () => setShowPopup(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-head\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/Location.png\",\n              alt: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Add Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"state\",\n              placeholder: \"State\",\n              value: newAddress.state,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              placeholder: \"City/District\",\n              value: newAddress.city,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"pin\",\n              placeholder: \"Pin Code\",\n              value: newAddress.pin,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phoneNumber\",\n              placeholder: \"Phone Number\",\n              value: newAddress.phoneNumber,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"address\",\n            placeholder: \"Enter full address\",\n            value: newAddress.address,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveAddress,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(Address, \"PlaVPO9LXVgp1X6p27PxyB+Rxok=\", false, function () {\n  return [useNavigate];\n});\n_c = Address;\nexport default Address;\nvar _c;\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"names":["React","useState","useNavigate","Header","Footer","jsxDEV","_jsxDEV","Address","_s","navigate","showPopup","setShowPopup","addresses","setAddresses","id","name","address","phoneNumber","state","pin","city","isDefault","newAddress","setNewAddress","handleInputChange","e","value","target","handleSaveAddress","updatedAddresses","length","alert","handleRemoveAddress","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","map","stopPropagation","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/arvind/food-delivery-app/frontend/src/components/Address new/address.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import \"./address.css\"; \n// import Header from \"../header/header\";\n// import Footer from \"../footer/Footer\";\n\n// const Address = () => {\n//   const [showPopup, setShowPopup] = useState(false); // State to toggle the popup\n//   const [addresses, setAddresses] = useState([\n//     {\n//       id: 1,\n//       name: \"Mike Ross\",\n//       address: \"45, Green Street, Sector 12, New Delhi, 110001, India\",\n//       phoneNumber: \"8734637468\",\n//       state: \"Delhi\",\n//       pin: \"110001\",\n//       city: \"New Delhi\",\n//       isDefault: true,\n//     },\n//     {\n//       id: 2,\n//       name: \"Mike Ross\",\n//       address: \"Office 704, Tower B, Techno Plaza, Bengaluru, Karnataka, 560100, India\",\n//       phoneNumber: \"8937447362\",\n//       state: \"Karnataka\",\n//       pin: \"560100\",\n//       city: \"Bengaluru\",\n//       isDefault: false,\n//     },\n//   ]); // Default addresses\n//   const [newAddress, setNewAddress] = useState({\n//     state: \"\",\n//     city: \"\",\n//     pin: \"\",\n//     phoneNumber: \"\",\n//     address: \"\",\n//   }); // State for the new address form\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewAddress({ ...newAddress, [name]: value });\n//   };\n\n//   const handleSaveAddress = () => {\n//     if (\n//       newAddress.state &&\n//       newAddress.city &&\n//       newAddress.pin &&\n//       newAddress.phoneNumber &&\n//       newAddress.address\n//     ) {\n//       const updatedAddresses = [\n//         ...addresses,\n//         { ...newAddress, id: addresses.length + 1, isDefault: false },\n//       ];\n//       setAddresses(updatedAddresses);\n//       setNewAddress({\n//         state: \"\",\n//         city: \"\",\n//         pin: \"\",\n//         phoneNumber: \"\",\n//         address: \"\",\n//       }); // Reset form\n//       setShowPopup(false); // Close popup\n//     } else {\n//       alert(\"Please fill in all fields.\");\n//     }\n//   };\n\n//   const handleRemoveAddress = (id) => {\n//     setAddresses(addresses.filter((address) => address.id !== id));\n//   };\n\n//   return (\n//     <div>\n//       <Header />\n//       <div className=\"addresses-page\">\n//         <header className=\"headers\">\n//         <img src=\"images/arrow-left.png\" alt=\"arrow-left\" />\n\n//           <h1>Your Addresses</h1>\n//         </header>\n//         <div className=\"addresses-container\">\n//           {/* Add Address Card  */}\n//           <div\n//             className=\"address-card add-address\"\n//             onClick={() => setShowPopup(true)}\n//           >\n//             <div className=\"add-icon\">\n//               <img src=\"/images/add 2.png\" alt=\"add\" />\n//             </div>\n//             <p>Add Address</p>\n//           </div>\n\n//           {/* Display Existing Addresses */}\n//           {addresses.map((address) => (\n//             <div className=\"address-card\" key={address.id}>\n//               <h3 className=\"address-name\">\n//                 {address.name}\n//                 {address.isDefault && (\n//                   <span className=\"default-badge\">Default</span>\n//                 )}\n//               </h3>\n\n//               <p>{address.address}</p>\n//               <p>Phone Number: {address.phoneNumber}</p>\n//               <div className=\"actions\"> \n//                 <button>Edit</button> |{\" \"}\n//                 <button onClick={() => handleRemoveAddress(address.id)}>\n//                   Remove\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Popup for Adding Address */}\n//         {showPopup && (\n//           <div className=\"popup-overlay\" onClick={() => setShowPopup(false)}>\n//             <div className=\"popup-content\" onClick={(e) => e.stopPropagation()}>\n             \n//               <div className=\"popup-head\">\n//                 <img src=\"/images/Location.png\" alt=\"location\"/>\n//                 <h2>Add Address</h2>\n//               </div>\n             \n//               <div className=\"form-row\">\n//                 <input\n//                   type=\"text\"\n//                   name=\"state\"\n//                   placeholder=\"State\"\n//                   value={newAddress.state}\n//                   onChange={handleInputChange}\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"city\"\n//                   placeholder=\"City/District\"\n//                   value={newAddress.city}\n//                   onChange={handleInputChange}\n//                 />\n       \n//                 <input\n//                   type=\"text\"\n//                   name=\"pin\"\n//                   placeholder=\"Pin Code\"\n//                   value={newAddress.pin}\n//                   onChange={handleInputChange}\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"phoneNumber\"\n//                   placeholder=\"Phone Number\"\n//                   value={newAddress.phoneNumber}\n//                   onChange={handleInputChange}\n//                 />\n//               </div>\n//               <textarea\n//                 name=\"address\"\n//                 placeholder=\"Enter full address\"\n//                 value={newAddress.address}\n//                 onChange={handleInputChange}\n//               ></textarea>\n//               <div className=\"popup-actions\">\n//                 <button onClick={handleSaveAddress}>Save</button>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default Address;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport \"./address.css\"; \nimport Header from \"../header/header\";\nimport Footer from \"../footer/Footer\";\n\nconst Address = () => {\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const [showPopup, setShowPopup] = useState(false); // State to toggle the popup\n  const [addresses, setAddresses] = useState([\n    {\n      id: 1,\n      name: \"Mike Ross\",\n      address: \"45, Green Street, Sector 12, New Delhi, 110001, India\",\n      phoneNumber: \"8734637468\",\n      state: \"Delhi\",\n      pin: \"110001\",\n      city: \"New Delhi\",\n      isDefault: true,\n    },\n    {\n      id: 2,\n      name: \"Mike Ross\",\n      address: \"Office 704, Tower B, Techno Plaza, Bengaluru, Karnataka, 560100, India\",\n      phoneNumber: \"8937447362\",\n      state: \"Karnataka\",\n      pin: \"560100\",\n      city: \"Bengaluru\",\n      isDefault: false,\n    },\n  ]); // Default addresses\n  const [newAddress, setNewAddress] = useState({\n    state: \"\",\n    city: \"\",\n    pin: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n  }); // State for the new address form\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewAddress({ ...newAddress, [name]: value });\n  };\n\n  const handleSaveAddress = () => {\n    if (\n      newAddress.state &&\n      newAddress.city &&\n      newAddress.pin &&\n      newAddress.phoneNumber &&\n      newAddress.address\n    ) {\n      const updatedAddresses = [\n        ...addresses,\n        { ...newAddress, id: addresses.length + 1, isDefault: false },\n      ];\n      setAddresses(updatedAddresses);\n      setNewAddress({\n        state: \"\",\n        city: \"\",\n        pin: \"\",\n        phoneNumber: \"\",\n        address: \"\",\n      }); // Reset form\n      setShowPopup(false); // Close popup\n    } else {\n      alert(\"Please fill in all fields.\");\n    }\n  };\n\n  const handleRemoveAddress = (id) => {\n    setAddresses(addresses.filter((address) => address.id !== id));\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"addresses-page\">\n        <header className=\"headers\">\n          <img \n            src=\"images/arrow-left.png\" \n            alt=\"arrow-left\" \n            onClick={() => navigate(\"/checkout\")} // Navigate to \"/checkout\" on click\n          />\n          <h1>Your Addresses</h1>\n        </header>\n        <div className=\"addresses-container\">\n          {/* Add Address Card */}\n          <div\n            className=\"address-card add-address\"\n            onClick={() => setShowPopup(true)}\n          >\n            <div className=\"add-icon\">\n              <img src=\"/images/add 2.png\" alt=\"add\" />\n            </div>\n            <p>Add Address</p>\n          </div>\n\n          {/* Display Existing Addresses */}\n          {addresses.map((address) => (\n            <div className=\"address-card\" key={address.id}>\n              <h3 className=\"address-name\">\n                {address.name}\n                {address.isDefault && (\n                  <span className=\"default-badge\">Default</span>\n                )}\n              </h3>\n\n              <p>{address.address}</p>\n              <p>Phone Number: {address.phoneNumber}</p>\n              <div className=\"actions\"> \n                <button>Edit</button> |{\" \"}\n                <button onClick={() => handleRemoveAddress(address.id)}>\n                  Remove\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Popup for Adding Address */}\n        {showPopup && (\n          <div className=\"popup-overlay\" onClick={() => setShowPopup(false)}>\n            <div className=\"popup-content\" onClick={(e) => e.stopPropagation()}>\n             \n              <div className=\"popup-head\">\n                <img src=\"/images/Location.png\" alt=\"location\"/>\n                <h2>Add Address</h2>\n              </div>\n             \n              <div className=\"form-row\">\n                <input\n                  type=\"text\"\n                  name=\"state\"\n                  placeholder=\"State\"\n                  value={newAddress.state}\n                  onChange={handleInputChange}\n                />\n                <input\n                  type=\"text\"\n                  name=\"city\"\n                  placeholder=\"City/District\"\n                  value={newAddress.city}\n                  onChange={handleInputChange}\n                />\n       \n                <input\n                  type=\"text\"\n                  name=\"pin\"\n                  placeholder=\"Pin Code\"\n                  value={newAddress.pin}\n                  onChange={handleInputChange}\n                />\n                <input\n                  type=\"text\"\n                  name=\"phoneNumber\"\n                  placeholder=\"Phone Number\"\n                  value={newAddress.phoneNumber}\n                  onChange={handleInputChange}\n                />\n              </div>\n              <textarea\n                name=\"address\"\n                placeholder=\"Enter full address\"\n                value={newAddress.address}\n                onChange={handleInputChange}\n              ></textarea>\n              <div className=\"popup-actions\">\n                <button onClick={handleSaveAddress}>Save</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Address;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAsDA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACW,SAAS,EAAEC,Y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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}